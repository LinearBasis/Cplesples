#include "FragTrap.hpp"

FragTrap::FragTrap(std::string name) : ClapTrap(name)
{
	this->_hp = 100;
	this->_energy = 100;
	this->_attack = 30;
}

FragTrap::~FragTrap()
{

}

FragTrap::FragTrap(const FragTrap& copy)
{
	this->ClapTrap::operator=(copy);
}


FragTrap&	FragTrap::operator=(const FragTrap& copy)
{
	if (this == &copy)
		return (*this);
	this->ClapTrap::operator=(copy);
	return (*this);
}

void		FragTrap::attack(const std::string& target)
{
	std::cout << "FragTrap " << this->_name
		<< " attack " << target <<", causing " << this->_attack
		<< " points of damage!" << std::endl;
}

void	FragTrap::highFivesGuys()
{
	std::cout <<
	"                                                                           \n\
                                                                                \n\
                             .       ,..                                        \n\
                      ...  .   *//(/   .,.  ..                                  \n\
                  .          ,/,...,/*          ,                               \n\
                    ,////*   (*,...,*(    /***,   ,                             \n\
                   (/,..,*(  /*....,*(. ,*,...*/   ,.                           \n\
          ..   .   /*....*/. /*....,*/. /*....,/.  *.                           \n\
        .    ,     /,....*/. (*.....*/. /,....,/.  *.                           \n\
       .   //*//,  /,....*/. (*.....*/. /,....,/.  *.                           \n\
      .   (*,.,*( ./,....*/, (*,....*/. /,....,/.  *.                           \n\
          (*,.,*(.,/,....,/, (*,....,/..(,....,/.  *.                           \n\
      .   (*,..,(.,/,....,/* (*,....,(..(,....,/.  *.                           \n\
          (*...,(.*/,....,(/ #*,....,(,.(,....,(.  *.                           \n\
      .   (,...*(.//,....,(/ #/,....,(,.(,....,(.  *.                           \n\
     ..  .(,...*(.(/,....,(( #/,....,(,.(*....,(.  *.             ...           \n\
      .  ,/,...*(.#/,....,(# #/,....,(*,(*....,(.  *.                    ,.     \n\
     ..  */,...*(.#/,....,/# #/,...../##(*....,(.  *.    .   .#(/*,**(#   ...   \n\
      .  (/,...*(.#/,......***,.......,,,.....,(.  *.  .   #/*.......,*(   ,    \n\
     .   #/,...,/(/,..........................,(.  *..   /(*........,*(*. ,,.   \n\
     .   #*,..................................,/,  *,   (*,.......,*(*,. *,     \n\
     .  ,(*...................................,*(     */,......,*((,.. *,       \n\
     .  //,....................................,*(//(/,.....,*(#,.. *,..        \n\
     .  *(*................................................,*(,. *,.            \n\
     .  .(*,..............................................,/#.  ,..             \n\
     .   (*,...........................................,,/#,.  ,.               \n\
     .   #/,.........................................,,/#,.  *,.                \n\
      .  ((*,....................................,,,,/#,. .*,.                  \n\
      .  .#/,,,...............................,,,,,,/#.  *,.                    \n\
       .  *(*,,,,,.........,,,,,..........,,,,,,,,*/#.  *.                      \n\
       ..  ,#/,,,,,,,,,,,,,,,,,,,,..,,,,,,,,,,,,,/(*.  ,.                       \n\
         ,  .((*,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,/(#,,. *,                         \n\
          .,  .,#(*,,,,,,,,,,,,,,,,,,,,,,,*/(#*,.  *,                           \n\
             .  .,,/#((/***,,,,,,,,***//(#/,,. .*,.                             \n\
                ,,  ..,,,,,**///**,,,,,,,.  *,..                                \n\
                   ...,**,.       ..,**,,,.                                     \n\
                             ..  .                                              \n\
                                                                                \n";
}
